#!/bin/sh

# Copyright Â© 2021-2022 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

set -e -u

usage()
{
    printf 'Usage: %s [--bare] DIR\n' "${0##*/}"
}
bare=
dotgit=.git
while getopts 'h-:' opt
do
    case $opt in
        h)
            usage
            exit;;
        -)
            case $OPTARG in
                bare)
                    bare=1
                    dotgit=.;;
                help)
                    usage
                    exit;;
                *)
                    usage >&2
                    exit 1;;
            esac
            ;;
        *)
            exit 1;;
    esac
done
shift $((OPTIND - 1))
if [ $# -ne 1 ]
then
    usage >&2
    exit 1
fi
canonicalize()
{
    cd -P -- "$1" && pwd
}
base=$(canonicalize "${0%/*}")
target="$1"
case $target in
    -*) target="./$target";
esac
umask 022
git init ${bare:+--bare} "$target"
tgit()
{
    git -C "$target" "$@"
}
tgit fast-import --quiet <<EOF
blob
mark :1
data <<eof
* diff=pwn
eof
reset refs/tmp
commit refs/tmp
mark :2
author <> 0 +0000
committer <> 0 +0000
data 0
M 100644 :1 .gitattributes
EOF
commit=$(tgit \
    -c user.email=nobody@example.org \
    -c user.name=nobody \
    -c gpg.program="$base/lib/gpg-sign" \
    commit-tree 'refs/tmp^{tree}' \
    --gpg-sign < /dev/null
)
tgit update-ref -d 'refs/tmp'
branch=$(tgit symbolic-ref --short HEAD)
tgit branch "$branch" "$commit"
if [ -z "$bare" ]
then
    tgit reset --hard
fi
install "$base/lib/payload" "$target/$dotgit/pwn"
# The list of git commands was generated by:
#   git help -a | sed -r -e '/^(External commands|Command aliases)/ q' | grep '^  ' | cut -d ' ' -f 4 | sort -u | xargs
for cmd in add am annotate apply archimport archive bisect blame branch bugreport bundle cat-file check-attr check-ignore check-mailmap check-ref-format checkout checkout-index cherry cherry-pick citool clean clone column commit commit-graph commit-tree config count-objects credential credential-cache credential-store cvsexportcommit cvsimport cvsserver daemon describe diff diff-files diff-index diff-tree difftool fast-export fast-import fetch fetch-pack filter-branch fmt-merge-msg for-each-ref for-each-repo format-patch fsck gc get-tar-commit-id gitk gitweb grep gui hash-object help http-backend imap-send index-pack init instaweb interpret-trailers log ls-files ls-remote ls-tree mailinfo mailsplit maintenance merge merge-base merge-file merge-index merge-one-file merge-tree mergetool mktag mktree multi-pack-index mv name-rev notes p4 pack-objects pack-redundant pack-refs patch-id prune prune-packed pull push quiltimport range-diff read-tree rebase reflog remote repack replace request-pull rerere reset restore rev-list rev-parse revert rm send-email send-pack sh-i18n sh-setup shortlog show show-branch show-index show-ref sparse-checkout stash status stripspace submodule svn switch symbolic-ref tag unpack-file unpack-objects update-index update-ref update-server-info var verify-commit verify-pack verify-tag whatchanged worktree write-tree
do
    tgit config "pager.$cmd" true
done
# shellcheck disable=SC2043
for var in log.showSignature
do
    tgit config "$var" true
done
for var in core.fsmonitor core.editor core.pager
do
    tgit config "$var" "GIT_LANDMINE_VECTOR=$var $dotgit/pwn"
done
tgit config gpg.program "$dotgit/pwn"
tgit config help.browser pwn
tgit config browser.pwn.cmd "GIT_LANDMINE_VECTOR=help.browser $dotgit/pwn"
tgit config help.format html
for path in "$target/$dotgit"/hooks/*.sample
do
    rm "$path"
    path="${path%.sample}"
    ln -sf "../pwn" "$path"
done
tgit config diff.pwn.command "GIT_LANDMINE_VECTOR='diff driver' $dotgit/pwn"

# vim:ts=4 sts=4 sw=4 et
